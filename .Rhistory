}
}
}
sn <- stack(list.files("../SNAKEBITE MODELLING/Snakes Fundamental niches/Niches/Final-dists", "tif", full.names = T, recursive = F))
proj4string(sn) <- CRS("+init=epsg:5235")
sn <- resample(sn, ref)
names(sn) <- c("Bungarus_caeruleus",
"Bungarus_ceylonicus",
"Daboia_russelii",
"Echis_carinatus",
"Hypnale_spp",
"Naja_naja",
"Trimeresurus_trigonocephalus")
dir.create(paste0("Snakes/", ssp[1]))
for(k in seq_along(years)){
dir.create(paste0("Snakes/", ssp[1], "/", "/", years[k]))
lc <- list(tc = raster(paste0("Tree cover/", ssp[1], "/tif/Tree-cover-", years[k], ".tif")),
df = raster(paste0("Distance-forests/", ssp[1], "/Dist-for-", years[k], ".tif"))/1000,
pa = raster(paste0("Proportion-agriculture/", ssp[1],  "/Prop-agr-", years[k], ".tif")))
lc <- lapply(lc, function(x){
proj4string(x) <- CRS("+init=epsg:5235")
x <- resample(x, ref)
})
lc$snakes <- sn
lc$roads <- roads
lc$topo <- ref
lc.r <- stack(lc)
lc.df <- data.frame(extract(lc.r, coords.ref))
lc.im <- stackToImList(lc.df)
for(l in seq_along(ppm)){
r <- raster(predict(ppm[[l]], covariates = lc.im, type = "trend", ngrid = c(469, 267)))
writeRaster(r, paste0("Snakes/", ssp[1], "/", years[k],"/", spp[l]),
"GTiff")
}
}
for(k in seq_along(years)){
dir.create(paste0("Snakes/", ssp[1], "/", "/", years[k]))
lc <- list(tc = raster(paste0("Tree cover/", ssp[1], "/tif/Tree-cover-", years[k], ".tif")),
df = raster(paste0("Distance-forests/", ssp[1], "/Dist-for-", years[k], ".tif"))/1000,
pa = raster(paste0("Proportion-agriculture/", ssp[1],  "/Prop-agr-", years[k], ".tif")))
lc <- lapply(lc, function(x){
proj4string(x) <- CRS("+init=epsg:5235")
x <- resample(x, ref)
})
lc$snakes <- sn
lc$roads <- roads
lc$topo <- ref
lc.r <- stack(lc)
lc.df <- data.frame(extract(lc.r, coords.ref))
lc.im <- stackToImList(lc.df)
for(l in seq_along(ppm)){
r <- raster(predict(ppm[[l]], covariates = lc.im, type = "trend", ngrid = c(469, 267)))
writeRaster(r, paste0("Snakes/", ssp[1], "/", years[k],"/", spp[l]),
"GTiff", overwrite = T)
}
}
format.proj.data <- function(file = "", max.s){
require(readODS)
l <- readRDS(file)
idx <- read.csv("../Snakebite-zoonotic-transmission/Data/Agressivenes-indices.csv")
rel.abund <- read_ods("../Questionnaires/Parameters-questions.ods",
sheet = 2)$Density_5k
df <- lapply(l, function(x){
S <- as.matrix(x[, 3:9])
S <- sweep(S, 2, max.s, "/")
S <- sweep(S, 2, rel.abund, "*")
log.hum <- log(x$hum.pop)
x$log.hum <- log.hum
return(data.frame(hum.pop = x[, "hum.pop"],
log.hum = log.hum,
land.cover = x[, "land.cover"],
S))
})
return(df)
}
sb.func <- function(S, log.hum, hum.pop, land.cover, beta0, beta1, ind, aggr, rho){
S.1 <- sweep(as.matrix(S), 2, aggr * ind, "*")
S.sum <- rowSums(S.1)
Beta <- exp(beta0[land.cover] + beta1[land.cover] * log.hum^2)
P <- (1 - exp(-Beta * S.sum))*exp(rho)
return(P)
}
env.func <- function(S, H.bit, hum.pop, log.hum, land.cover, s.effects, int, sever, beta0, beta1, rho){
S.1 <- sweep(S, 2, sever, "*")
Beta.i <- exp(beta0[land.cover] + beta1[land.cover] * log.hum^2)
S.2 <- sweep(S.1, 1, Beta.i, "*")
df <- data.frame(forest = as.numeric(land.cover==1),
degraded = as.numeric(land.cover==2),
agriculture = as.numeric(land.cover==3),
urban = as.numeric(land.cover==4),
tea = as.numeric(land.cover==5), S.2)
pars <- c(int, s.effects)
P <- binomial()$linkinv(pars  %*% t(as.matrix(df)))
H.env <- c(P) * H.bit
P.env <- (H.env/hum.pop)*exp(rho)
return(P.env)
}
snake.env.contrib <- function(S, H.bit, hum.pop, log.hum, land.cover,
s.effects, int, sever, beta0, beta1){
S.1 <- sweep(S, 2, sever, "*")
Beta.i <- exp(beta0[land.cover] + beta1[land.cover] * log.hum^2)
S.2 <- sweep(S.1, 1, Beta.i, "*")
max.sp <- apply(S.2, 1, which.max)
return(max.sp)
}
#Incidence data
incid.data <- readRDS("Data-objects/Incidence models data-Apr2020.rds")
S <- incid.data[, 3:9]
max.s <- apply(S, 2, max)
library(coda)
sb.model <- readRDS("../Snakebite-zoonotic-transmission/Model-results/Snakebites-mass-action-NIMBLE-model.rds")
env.model <- readRDS("../Snakebite-zoonotic-transmission/Model-results/Envenoming-NIMBLE-model.rds")
sb.mcmc <- rbind(sb.model[[1]], sb.model[[2]], sb.model[[3]])
env.mcmc <- rbind(env.model[[1]], env.model[[2]], env.model[[3]])
sb.summary <- list(
beta0 = data.frame(
median = apply(sb.mcmc[, paste0("beta0[", 1:5, "]")], 2, median),
ints = t(apply(sb.mcmc[, paste0("beta0[", 1:5, "]")], 2, function(x){
HPDinterval(as.mcmc(x), 0.95)
}))
),
beta1 = data.frame(
median = apply(sb.mcmc[, paste0("beta1[", 1:5, "]")], 2, median),
ints = t(apply(sb.mcmc[, paste0("beta1[", 1:5, "]")], 2, function(x){
HPDinterval(as.mcmc(x), 0.95)
}))
),
ind = data.frame(
median = apply(sb.mcmc[, paste0("indices[", 1:7, "]")], 2, median),
ints = t(apply(sb.mcmc[, paste0("indices[", 1:7, "]")], 2, function(x){
HPDinterval(as.mcmc(x), 0.95)
}))
),
rho = data.frame(
median = apply(sb.mcmc[, paste0("rho[", 1:3057, "]")], 2, median),
ints = t(apply(sb.mcmc[, paste0("rho[", 1:3057, "]")], 2, function(x){
HPDinterval(as.mcmc(x), 0.95)
}))
)
)
env.summary <- list(
int = data.frame(
median = apply(env.mcmc[, paste0("inter[", 1:5, "]")], 2, median),
ints = t(apply(env.mcmc[, paste0("inter[", 1:5, "]")], 2, function(x){
HPDinterval(as.mcmc(x), 0.95)
}))
),
s.effects = data.frame(
median = apply(env.mcmc[, paste0("s.effects[", 1:7, "]")], 2, median),
ints = t(apply(env.mcmc[, paste0("s.effects[", 1:7, "]")], 2, function(x){
HPDinterval(as.mcmc(x), 0.95)
}))
),
rho = data.frame(
median = apply(env.mcmc[, paste0("rho[", 1:3057, "]")], 2, median),
ints = t(apply(env.mcmc[, paste0("rho[", 1:3057, "]")], 2, function(x){
HPDinterval(as.mcmc(x), 0.95)
}))
)
)
#Indices
agr.ind <- read.csv("../Snakebite-zoonotic-transmission/Data/Agressivenes-indices.csv")
proj.files <- list.files("Incid-models", "rds", full.names = T)
proj.names <- list.files("Incid-models", "rds", full.names = F)
proj.names <- paste0("Projection", substr(proj.names, 10, nchar(proj.names)))
dir.create("../Population projections/Incidence-projections")
library(doParallel); registerDoParallel(cores = 8)
for(i in seq_along(proj.files)){
dat <- format.proj.data(proj.files[i], max.s = max.s)
projection <- foreach(j = seq_along(dat)) %dopar% {
sb.incid <- foreach(k = 1:3, .combine = cbind) %do% {
sb.func(S = dat[[j]][, 4:10],
log.hum = dat[[j]]$log.hum,
hum.pop = dat[[j]]$hum.pop,
land.cover = dat[[j]]$land.cover,
beta0 = sb.summary$beta0[, k],
beta1 = sb.summary$beta1[, k],
ind = sb.summary$ind[, k],
aggr = agr.ind$Agressiveness/10,
rho = sb.summary$rho[, k])
} #Working fine
env.incid <- foreach(k = 1:3, .combine = cbind) %do% {
env.func(S = dat[[j]][, 4:10],
H.bit = sb.incid[, 1] * dat[[j]]$hum.pop,
hum.pop = dat[[j]]$hum.pop,
log.hum = dat[[j]]$log.hum,
land.cover = dat[[j]]$land.cover,
s.effects = env.summary$s.effects[, k],
int = env.summary$int[, k],
sever = agr.ind$Severity/10,
beta0 = sb.summary$beta0[, k],
beta1 = sb.summary$beta1[, k],
rho = env.summary$rho[, k]
)
}
k = 1
snakes.contr <- snake.env.contrib(S = dat[[j]][, 4:10],
H.bit = sb.incid[, 1] * dat[[j]]$hum.pop,
hum.pop = dat[[j]]$hum.pop,
log.hum = dat[[j]]$log.hum,
land.cover = dat[[j]]$land.cover,
s.effects = env.summary$s.effects[, k],
int = env.summary$int[, k],
sever = agr.ind$Severity/10,
beta0 = sb.summary$beta0[, k],
beta1 = sb.summary$beta1[, k])
df <- data.frame(cbind(sb.incid,env.incid, snakes.contr))
names(df) <- c("sb.med", "sb.025", "sb.97",
"env.med", "env.025", "env.97", "snakes")
return(df)
}
saveRDS(projection, paste0("Incidence-projections/",
proj.names[i]))
}
incid.data <- readRDS("Data-objects/Incidence models data-Apr2020.rds")
proj.files <- list.files("Incidence-projections", "rds", full.names = T)
projections <- lapply(proj.files, readRDS)
scenarios <- substr(proj.files, 34, nchar(proj.files) - 4)
med.projs <- lapply(projections, function(x){
d <- foreach(i = seq_along(x), .combine = rbind) %do% {colMeans(x[[i]])}
d <- data.frame(d)
d$year <- 2010:2050
return(d)
})
med.projs <- lapply(seq_along(med.projs),
function(x){
med.projs[[x]]$scenario <- scenarios[x]
return(med.projs[[x]])
})
med.projs.df <- rbindlist(med.projs)
med.projs.df$scen <- med.projs.df$scenario
library(ggplot2)
env.time <-  ggplot(med.projs.df) +
geom_ribbon(aes(x = year, ymin = env.025, ymax = env.97, fill = scen), alpha = 0.05) +
geom_point(aes(x = year, y = env.med, colour = scen), size = 0.25) +
geom_line(aes(x = year, y = env.med, colour = scen), size = 0.25, linetype = "dotted") +
geom_hline(yintercept = mean(incid.data$envenomings), colour = "grey50", linetype = "dashed") +
geom_smooth(aes(x = year, y = env.med, colour = scen, fill = scen), alpha = 0.2, size = 0.75, method = "lm") +
labs(x = "Year", y = "Envenoming incidence", colour = "Scenario", fill = "Scenario") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7))
env.time
decline.model <- lm(env.med ~ 0 + scen + scen : year, data = med.projs.df)
sum.mod <- summary(decline.model)
rates <- data.frame(sum.mod$coefficients)
rates.df <- rates[8:14,]
rates.df$proj <- c("SSP1",
"SSP2 CNRM-CM5", "SSP2 GFDL-CM3", "SSP2 MPI-ESM-LR",
"SSP5 CNRM-CM5", "SSP5 GFDL-CM3", "SSP5 MPI-ESM-LR")
rates.df$signif <- as.factor(ifelse(rates.df$Pr...t.. > 0.05, 0, 1))
rates.df$SSP <- as.factor(substr(rates.df$proj, 1, 4))
rates.plot <- ggplot(rates.df) + geom_boxplot(aes(x = 1, y = Estimate)) +
geom_point(aes(x = 1, y = Estimate, colour = proj, shape = signif ), size = 3, position = position_dodge(0.3))+
scale_shape_manual(values = c(4, 20)) +
geom_linerange(aes(x = 1, ymin = Estimate - Std..Error, ymax = Estimate + Std..Error, colour = proj), position = position_dodge(0.3)) +
labs(colour = "Scenario", y = "Absolute incidence change per year",
x = "") +
theme(axis.text.x = element_text(size = 0),
legend.position = "none")
rates.plot
med.projs.df$year[1]
scen <- levels(as.factor(med.projs.df$scen))
new.data.2050 <- expand.grid(scen = scen, year = 2050)
new.data.2010 <- expand.grid(scen = scen, year = 2010)
preds.2050 <- predict(decline.model, newdata = new.data.2050)
preds.2010 <- predict(decline.model, newdata = new.data.2010)
Percent.decline <- (preds.2010-preds.2050)/mean(incid.data$envenomings) * 100
Percent.decline
rates.df$Percent.decline <- Percent.decline * (-1)
source("Random-functions/multiplot.R")
multiplot(rates.plot, env.time, layout = matrix(c(1, 2, 2, 2, 2, 2), ncol = 6))
dir.create("Plots")
pdf("Plots/Evenoming-change.pdf", width = 12, height = 6)
multiplot(rates.plot, env.time, layout = matrix(c(1, 2, 2, 2, 2, 2), ncol = 6))
dev.off()
env.changes <- lapply(projections, function(x){lapply(x, function(x1){x1$env.med})})
env.changes <- lapply(env.changes, function(x){
foreach(i = seq_along(x), .combine = cbind) %do% {
x[[i]]
}
})
change.models <- lapply(env.changes, function(x){
foreach(i = 1:nrow(x), .combine = rbind) %do% {
df <- data.frame(env <- x[i, ], time = 1:41)
model <- lm(env ~ time, data = df)
r2 <- summary(model)$adj.r.squared
P <- summary(model)$coefficients[2, 4]
return(c(rate = model$coefficients["time"], P = P, r2 = r2))
}
})
ch.mods <- foreach(i = 1:7, .combine = rbind) %do% {
rate <- change.models[[i]][, 1]
P <- change.models[[i]][, 2]
r2 <- change.models[[i]][, 3]
scen <- scenarios[i]
return(data.frame(x = incid.data$x,
y = incid.data$y,
rate = rate,
P = P,
r2 = r2,
scenario = scen))
}
library(viridis)
ggplot(ch.mods) + geom_raster(aes(x = x, y = y, fill = rate)) +
facet_grid(scenario ~ 1) + coord_fixed(ratio = 1) +
scale_fill_gradientn(colours = (inferno(100))) +
labs(fill = "Annual \n rate") +
theme_light()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size = 6),
axis.text.y = element_text(size = 6),
legend.text = element_text(angle = 45, vjust = 0.5),
legend.title = element_text(size = 14),
strip.text.x = element_text(size = 12),
strip.text.y = element_blank())
pdf("Plots/Spatial-rates.of change.pdf", width = 3, height = 15)
ggplot(ch.mods) + geom_raster(aes(x = x, y = y, fill = rate)) +
facet_grid(scenario ~ 1) + coord_fixed(ratio = 1) +
scale_fill_gradientn(colours = (inferno(100))) +
labs(fill = "Annual \n change") +
theme_light()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size = 6),
axis.text.y = element_text(size = 6),
legend.text = element_text(angle = 45, vjust = 0.5),
legend.title = element_text(size = 14),
strip.text.x = element_text(size = 12),
strip.text.y = element_blank())
dev.off()
ggplot(ch.mods) + geom_raster(aes(x = x, y = y, fill = r2)) +
facet_grid(scenario ~ 1) + coord_fixed(ratio = 1) +
scale_fill_gradientn(colours = (inferno(100))) +
labs(fill = expression(italic(R)^2)) +
theme_light()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size = 6),
axis.text.y = element_text(size = 6),
legend.text = element_text(angle = 45, vjust = 0.5),
legend.title = element_text(size = 14),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12))
ggplot(ch.mods) + geom_raster(aes(x = x, y = y, fill = P)) +
facet_grid(scenario ~ 1) + coord_fixed(ratio = 1) +
scale_fill_gradientn(colours = (inferno(100))) +
labs(fill = expression(italic(P))) +
theme_light()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size = 6),
axis.text.y = element_blank(),
legend.text = element_text(angle = 45, vjust = 0.5),
legend.title = element_text(size = 14),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12))
pdf("Plots/Spatial-r2.pdf", width = 3, height = 15)
ggplot(ch.mods) + geom_raster(aes(x = x, y = y, fill = r2)) +
facet_grid(scenario ~ 1) + coord_fixed(ratio = 1) +
scale_fill_gradientn(colours = (inferno(100))) +
labs(fill = expression(italic(R)^2)) +
theme_light()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size = 6),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
legend.text = element_text(angle = 45, vjust = 0.5),
legend.title = element_text(size = 14),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12))
dev.off()
library(dplyr)
library(data.table)
incid.data <- readRDS("../SNAKEBITE MODELLING/Data objects/Incid-models-data-Aug-2020/Incidence models data-Apr2020.rds")
SSP <- c("SSP1", rep("SSP2", 3),
rep("SSP5", 3))
projs.df <- projections
for(i in seq_along(projs.df)){
for(j in seq_along(projs.df[[i]])){
projs.df[[i]][[j]]$year <- c(2010:2050)[j]
projs.df[[i]][[j]]$scenario <- rates.df$proj[i]
projs.df[[i]][[j]]$SSP <- SSP[i]
projs.df[[i]][[j]] <- cbind(incid.data[, c("x", "y")], projs.df[[i]][[j]])
}
projs.df[[i]] <- rbindlist(projs.df[[i]])
}
projs.df <- rbindlist(projs.df)
projs.df.sum <- projs.df %>% group_by(x, SSP, year) %>% summarise(
sb.med = mean(sb.med),
sb.025 = mean(sb.025),
sb.97 = mean(sb.97),
env.med = mean(env.med),
env.025 = mean(env.025),
env.97 = mean(env.97),
y = y)
library(viridis)
prob.env <- ggplot(projs.df.sum) + geom_tile(aes(x = year, y = y, fill = env.med/sb.med)) +
facet_wrap(~ SSP) +
scale_fill_gradientn(colours = rev(inferno(50)),
breaks = round(seq(0.45, 0.7, len = 5), 2),
limits = c(0.4, 0.75)) +
labs(x = "Year", y = "Latitude", fill = paste0("Latitude-averaged", "\n",
"probability that bites", "\n",
"result in envenoming")) +
theme_dark()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.text = element_text(angle = 45, vjust = 0.5))
prob.env
pdf("Plots/Probability-envenoming-LAT-TIME.pdf", width = 12, height = 6)
prob.env
dev.off()
spp <- c("Bungarus caeruleus", "Bungarus ceylonicus",
"Daboia russelii", "Echis carinatus",
"Hypnale spp.", "Naja naja",
"Trimeresurus trigonocephalus")
proj.sn <- lapply(seq_along(projections), function(x){
df <- rbindlist(lapply(ceiling(seq(1, 41, len = 4)), function(x1){
return(data.frame(incid.data[, c("x", "y")], Species = spp[projections[[x]][[x1]]$snakes],
year = c(2010:2050)[x1]))
}))
df$scenario <- scenarios[x]
return(df)
})
proj.sn.df <- rbindlist(proj.sn)
ggplot(proj.sn.df) + geom_tile(aes(x = x, y = y, fill = as.factor(Species))) +
facet_grid(scenario ~ year) + coord_fixed(ratio = 1) +
scale_fill_manual(values = rev(plasma(5))[2:5]) +
labs(fill = "") +
theme_light() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size = 6),
axis.text.y = element_text(size = 6),
legend.text = element_text(face = "italic", size = 12),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12))
pdf("Plots/Snake-species-time-scenario.pdf", width = 6.5, height = 15)
ggplot(proj.sn.df) + geom_tile(aes(x = x, y = y, fill = Species)) +
facet_grid(scenario ~ year) + coord_fixed(ratio = 1) +
scale_fill_manual(values = rev(inferno(5))[2:5]) +
labs(fill = "") +
theme_light() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size = 6),
axis.text.y = element_text(size = 6),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12),
legend.text = element_text(face = "italic", size = 12))
dev.off()
lc.files <- list.files("Land-cover-5km", "tif", full.names = T, recursive = T)
lc.r <- stack(lc.files)
#Correr y verificar estas
lc.tea <- reclassify(lc.r, cbind(from = c(-Inf, 4), to = c(4, 5), becomes = c(0, 1)))
lc.urban <- reclassify(lc.r, cbind(from = c(-Inf, 3, 4), to = c(3, 4, Inf), becomes = c(0, 1, 0)))
lc.agric <- reclassify(lc.r, cbind(from = c(-Inf, 2, 3), to = c(2, 3, Inf), becomes = c(0, 1, 0)))# lc.r == 3
lc.degraded <- reclassify(lc.r, cbind(from = c(-Inf, 1, 2), to = c(1, 2, Inf), becomes = c(0, 1, 0)))
lc.forest <- reclassify(lc.r, cbind(from = c(-Inf, 1), to = c(1, 5), becomes = c(1, 0)))
lc.urban.m <- cellStats(lc.urban, mean)
lc.tea.m <- cellStats(lc.tea, mean)
lc.agric.m <- cellStats(lc.agric, mean)
lc.degraded.m <- cellStats(lc.degraded, mean)
lc.forest.m <- cellStats(lc.forest, mean)
med.projs.df$urban <- lc.urban.m
med.projs.df$tea <- lc.tea.m
med.projs.df$agric <- lc.agric.m
med.projs.df$degraded <- lc.degraded.m
med.projs.df$forest <- lc.forest.m
urb.for.plot <- ggplot(med.projs.df) + geom_point(aes(x = urban, y = forest, colour = env.med, size = env.med),
alpha = 0.5) +
geom_path(aes(x = urban, y = forest),
arrow = arrow(type = "closed",
length = unit(0.15, "inches"),
ends = "first"), size = 0.25) +
guides(size = "none") +
scale_colour_gradientn(colours = (inferno(100))) +
facet_grid(scenario~1) +
labs(x = "Urban cover", y = "Forest cover", colour = "Envenoming\n incidence", size = "") +
theme(strip.text.x = element_blank(),
legend.position = "bottom",
legend.text = element_text(angle = 45, vjust = 0.5))
agr.for.plot <- ggplot(med.projs.df) + geom_point(aes(x = agric, y = forest, colour = env.med, size = env.med),
alpha = 0.5) +
geom_path(aes(x = agric, y = forest),
arrow = arrow(type = "closed",
length = unit(0.15, "inches"),
ends = "first"), size = 0.25) +
guides(size = "none") +
scale_colour_gradientn(colours = (inferno(100))) +
facet_grid(scenario~1) +
labs(x = "Agricultural cover", y = "Forest cover", colour = "Envenoming\n incidence") +
theme(strip.text.x = element_blank(),
legend.position = "bottom",
legend.text = element_text(angle = 45, vjust = 0.5))
urb.agric.plot <- ggplot(med.projs.df) + geom_point(aes(x = urban, y = agric, colour = env.med, size = env.med),
alpha = 0.5) +
geom_path(aes(x = urban, y = agric), arrow = arrow(type = "closed",
length = unit(0.15, "inches"),
ends = "first"), size = 0.25) +  guides(size = "none") +
scale_colour_gradientn(colours = (inferno(100))) +
facet_grid(scenario~1) +
labs(x = "Urban cover", y = "Agricultural cover", colour = "Envenoming\n incidence") +
theme(strip.text.x = element_blank(),
legend.position = "bottom",
legend.text = element_text(angle = 45, vjust = 0.5))
multiplot(urb.for.plot, urb.agric.plot, agr.for.plot, layout = matrix(c(1, 2, 3), ncol = 3))
proj <- raster("pop_2010.asc")
ssps <- paste0("SSP", c(1, 2, 5))
gcms <- c("CNRM-CM5", "GFDL-CM3", "MPI-ESM-LR")
lc.files <- list.files("Land cover", ".asc", full.names = T, recursive = T)
lc.r <- lapply(lc.files, function(x){
X <- raster(x)
proj4string(X) <- CRS(proj4string(proj))
X <- projectRaster(X, crs = CRS(SRS_string="EPSG:5235"), method = "ngb")
return(X)
})
